from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import update, select
from sqlalchemy.ext.asyncio import AsyncSession

from db.models import Client
from info import cities
from keyboard.keyboards import city_keyboard, city_kb

router = Router()


# cities = [
#     "–ß–µ—Ä–Ω—ñ–≤—Ü—ñ", "–ß–µ—Ä–Ω—ñ–≥—ñ–≤", "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫", "–£–∂–≥–æ—Ä–æ–¥" , "–ó–∞–ø–æ—Ä—ñ–∂–∂—è" , "–ö–∏—ó–≤"
# ]


# def city_keyboard():
#     buttons = [
#         [InlineKeyboardButton(text=city_name, callback_data=f"select_city:{city_name}")]
#         for city_name, _ in cities
#     ]
#     return InlineKeyboardMarkup(inline_keyboard=buttons)
#
# def city_kb():
#     return InlineKeyboardMarkup(inline_keyboard=[
#         [InlineKeyboardButton(text="üí°–ü—Ä–æ –Ω–∞—Å", callback_data="about"),
#          InlineKeyboardButton(text="üÜï–ù–∞—à—ñ –∞–∫—Ü—ñ—ó —Ç–∞ –Ω–æ–≤–∏–Ω–∏", callback_data="news")],
#         [InlineKeyboardButton(text="‚ùî–ß–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è", callback_data="faq"),
#          InlineKeyboardButton(text="üó∫–ù–∞–π–±–ª–∏–∂—á—ñ —Ç–æ—á–∫–∏", callback_data="nearby")],
#         [InlineKeyboardButton(text="ü§ù–°—Ç–∞—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º", callback_data="partner"),
#          InlineKeyboardButton(text="üõ†–¢–µ—Ö. –ø—ñ–¥—Ç—Ä–∏–º–∫–∞", callback_data="support")],
#         [InlineKeyboardButton(text="–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ", callback_data="change_city")],
#     ])


@router.callback_query(F.data == "change_city")
async def change_city_accept(callback: CallbackQuery):
    await callback.message.answer("–ë–∞–∂–∞—î—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –¢–∞–∫", callback_data="yes_change")],
        [InlineKeyboardButton(text="‚ùå –ù—ñ", callback_data="no_change")]
    ]))


@router.callback_query(F.data == "yes_change")
async def show_city_list(callback: CallbackQuery):
    await callback.message.edit_text("–û–±–µ—Ä—ñ—Ç—å –Ω–æ–≤–µ –º—ñ—Å—Ç–æ:", reply_markup=city_keyboard())
    await callback.answer()


@router.callback_query(F.data == "no_change")
async def no_change(callback: CallbackQuery):
    await callback.message.edit_text("–ó–º—ñ–Ω–∞ –º—ñ—Å—Ç–∞ —Å–∫–∞—Å–æ–≤–∞–Ω–∞.", reply_markup=city_kb())
    await callback.answer()



@router.callback_query(F.data.startswith("select_city:"))
async def select_city(callback: CallbackQuery, session: AsyncSession):
    selected_city = callback.data.split(":")[1]
    user_id = callback.from_user.id

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ—Å–Ω—É—î
    result = await session.execute(select(Client).where(Client.telegram_id == user_id))
    client = result.scalar_one_or_none()

    if client:
        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –º—ñ—Å—Ç–∞
        await session.execute(update(Client).where(Client.telegram_id == user_id).values(city=selected_city))
        await session.commit()
        await callback.message.edit_text(f"–ú—ñ—Å—Ç–æ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: {selected_city}", reply_markup=city_kb())
    else:
        await callback.message.edit_text("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –±–∞–∑—ñ.")

    await callback.answer()
